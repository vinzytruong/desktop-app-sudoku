package View;import java.awt.Color;import java.awt.Dimension;import java.awt.Font;import java.awt.FontFormatException;import java.awt.GridLayout;import java.awt.Insets;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStream;import javax.swing.BoxLayout;import javax.swing.JButton;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.SwingConstants;import javax.swing.border.EmptyBorder;public class JPanelControl extends JPanel {    public JLabel lblName;    public JLabel lblTime;    public JButtonImage btnUndo;    public JButtonImage btnClear;    public JButtonImage btnSolve;    public JButtonImage btnMenu;    public JButton btnNumber[];    public JPanel jpanelMenu;    public JPanel jpanelNumber;    public JPanel jpanelLabel;    public int valClicked;    private final int weight = 200;    private final int height = 500;    public JPanelControl() {        prepareUI();    }    private void prepareUI() {        Font font = createNewFont();        lblName = new JLabel("SUDOKU", SwingConstants.CENTER);        lblName.setForeground(new Color(255, 192, 0));        lblName.setFont(new Font(font.getFamily(), Font.BOLD, 28));        lblTime = new JLabel("00:00", SwingConstants.CENTER);        lblTime.setForeground(Color.WHITE);        lblTime.setFont(new Font(font.getFamily(), Font.BOLD, 24));        btnUndo = new JButtonImage();        btnUndo.createButton("/Image/btnUndoFalse.png", 75, 60);        btnClear = new JButtonImage();        btnClear.createButton("/Image/btnClearFalse.png", 75, 60);        btnMenu = new JButtonImage();        btnMenu.createButton("/Image/btnMenuFalse.png", 75, 60);        btnSolve = new JButtonImage();        btnSolve.createButton("/Image/btnSolveFalse.png", 75, 60);        BoxLayout boxlayout = new BoxLayout(this, BoxLayout.Y_AXIS);        this.setPreferredSize(new Dimension(weight, height));        this.setLayout(boxlayout);        this.setBorder(new EmptyBorder(new Insets(10, 10, 5, 10)));        this.setBackground(new Color(1, 26, 39));        jpanelLabel = new JPanel();        jpanelLabel.setLayout(new GridLayout(2, 1, 0, 10));        jpanelLabel.setBorder(new EmptyBorder(new Insets(20, 10, 40, 10)));        jpanelLabel.setBackground(new Color(1, 26, 39));        jpanelLabel.add(lblName);        jpanelLabel.add(lblTime);        jpanelMenu = new JPanel();        jpanelMenu.setLayout(new GridLayout(2, 2, 0, 0));        jpanelMenu.setBackground(new Color(1, 26, 39));        jpanelMenu.setBorder(new EmptyBorder(new Insets(0, 10, 0, 10)));        jpanelMenu.add(btnUndo);        jpanelMenu.add(btnClear);        jpanelMenu.add(btnMenu);        jpanelMenu.add(btnSolve);        jpanelNumber = new JPanel();        btnNumber = new JButton[9];        for (int i = 0; i < 9; i++) {            btnNumber[i] = new JButton();            btnNumber[i].setText(i + 1 + "");            btnNumber[i].setForeground(new Color(1, 26, 39));            btnNumber[i].setBackground(Color.WHITE);            btnNumber[i].setPreferredSize(new Dimension(60, 50));            btnNumber[i].setFont(new Font(font.getFamily(), Font.BOLD, 18));            btnNumber[i].setBorderPainted(false);            jpanelNumber.add(btnNumber[i]);        }        jpanelNumber.setLayout(new GridLayout(3, 3, 4, 4));        jpanelNumber.setBackground(new Color(1, 26, 39));        jpanelNumber.setBorder(new EmptyBorder(new Insets(0, 10, 10, 10)));        jpanelNumber.setSize(200, 200);        this.add(jpanelLabel);        this.add(jpanelNumber);        this.add(jpanelMenu);    }    public int getValClicked() {        return valClicked;    }    public void setValClicked(int valClicked) {        this.valClicked = valClicked;    }    /* Tao font moi tu file */    public Font createNewFont() {        InputStream file = null;        Font font = null;        try {            file = new FileInputStream("Play-Bold.ttf");        } catch (FileNotFoundException e1) {            System.out.println("Error get file to create font");        }        try {            font = Font.createFont(Font.TRUETYPE_FONT, file);        } catch (FontFormatException | IOException e1) {            System.out.println("Error create font");        }        return font;    }}